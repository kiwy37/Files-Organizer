<Window x:Class="FilesOrganizer.Views.StatisticsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:charts="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:model="clr-namespace:FilesOrganizer.Models"
        xmlns:materialIcons="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
        xmlns:convert="clr-namespace:FilesOrganizer.Core"
        xmlns:vm="clr-namespace:FilesOrganizer.ViewModels.Commands"
        xmlns:local="clr-namespace:FilesOrganizer.Views"
        Background="#BDD0EA"
        mc:Ignorable="d"
        Title="StatisticsWindow" Height="450" Width="800" WindowState="Maximized">

    <Window.Resources>
        <convert:PercentageConverter x:Key="PercentageConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <convert:SizeConverter x:Key="SizeConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <charts:PieChart DataClickCommand="{Binding Path=Commands.OpenElementsWindowCommand}" Series="{Binding FileSizeByExtension}" Grid.Column="0" Margin="10" LegendLocation="None">
                <charts:PieChart.DataTooltip>
                    <charts:DefaultTooltip SelectionMode="OnlySender" />
                </charts:PieChart.DataTooltip>
            </charts:PieChart>


            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 20 0 0">
                    <ToggleButton Content="By Number" FontSize="22" IsChecked="{Binding IsCountChecked}" Width="250" Height="50">
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border BorderThickness="1" CornerRadius="50,0,0,50" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </ToggleButton.Template>
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Background" Value="CornflowerBlue"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="RoyalBlue"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ToggleButton Content="By Size" FontSize="22" IsChecked="{Binding IsSizeChecked}" Width="250" Height="50">
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border BorderThickness="1" CornerRadius="0,50,50,0" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </ToggleButton.Template>
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Background" Value="CornflowerBlue"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="RoyalBlue"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                </StackPanel>



                <Border Grid.Row="1" BorderBrush="Black" BorderThickness="1" Margin="30">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <ListView ItemsSource="{Binding FileSizeByExtension}" Name="list" HorizontalContentAlignment="Stretch">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseDoubleClick">
                                    <b:InvokeCommandAction Command="{Binding Path=Commands.OpenElementsWindowCommand}" CommandParameter="{Binding SelectedItem, ElementName=list}" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Stretch" Margin="0 5 0 5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Border Grid.Column="0" Width="25" Height="25" BorderBrush="Black" BorderThickness="1" Margin="0,0,5,0" >
                                            <Rectangle Width="25" Height="25" Fill="{Binding Fill}"/>
                                        </Border>
                                        <TextBlock Grid.Column="1" FontSize="16" Text="{Binding Title}" />
                                        <!-- Display size with SizeConverter when IsSizeChecked is true, aligned to the right -->
                                        <TextBlock Grid.Column="2" FontSize="16" 
                       Text="{Binding Values[0], Converter={StaticResource SizeConverter}}" 
                       Visibility="{Binding Path=DataContext.IsSizeChecked, RelativeSource={RelativeSource AncestorType=ListView}, Converter={StaticResource BooleanToVisibilityConverter}}"
                       HorizontalAlignment="Right"/>
                                        <!-- Display count directly when IsCountChecked is true, including the word 'elements', aligned to the right -->
                                        <TextBlock Grid.Column="2" FontSize="16" 
                       Visibility="{Binding Path=DataContext.IsCountChecked, RelativeSource={RelativeSource AncestorType=ListView}, Converter={StaticResource BooleanToVisibilityConverter}}"
                       HorizontalAlignment="Right">
                <Run Text="{Binding Values[0]}"/>
                <Run Text=" elements"/>
                                        </TextBlock>
                                        <TextBlock Grid.Column="3" Margin="0 0 30 0"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </ScrollViewer>
                </Border>

            </Grid>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock FontSize="22" Grid.Column="0" Text="Top Last Accessed Files" HorizontalAlignment="Center"/>
            <xctk:IntegerUpDown Grid.Column="1" Value="{Binding IntegerUpDown}" Minimum="0" Maximum="100" Width="60"/>
            <TextBlock FontSize="22" Grid.Column="2" Text="Top Least Accessed Apps" HorizontalAlignment="Center" />
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <ListBox Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" ItemsSource="{Binding ElementsRecentAccessed}" Margin="15" SelectedItem="{Binding SelectedElement}">

                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseDoubleClick">
                        <b:InvokeCommandAction Command="{Binding Path=Commands.OpenFileFromList}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>

                <ListBox.ItemTemplate>
                    <DataTemplate DataType="model:Element">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <materialIcons:MaterialIcon Height="50" Grid.Column="0" Kind="{Binding Icon}" Foreground="{Binding Color}"/>

                            <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center">
                                <TextBlock Text="{Binding Name}" FontSize="14" Margin="2"/>
                                <TextBlock Text="{Binding Extension}" FontSize="14" Margin="2"/>
                            </StackPanel>

                            <StackPanel Grid.Column="2" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 40 0">
                                <TextBlock Text="{Binding LastAccessed}" FontSize="14"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <ListBox Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" ItemsSource="{Binding ElementsLeastAccessed}" Margin="15" SelectedItem="{Binding SelectedElement}">

                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseDoubleClick">
                        <b:InvokeCommandAction Command="{Binding Path=Commands.OpenFileFromList}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>

                <ListBox.ItemTemplate>
                    <DataTemplate DataType="model:Element">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <materialIcons:MaterialIcon Height="50" Grid.Column="0" Kind="{Binding Icon}" Foreground="{Binding Color}"/>

                            <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center">
                                <TextBlock Text="{Binding Name}" FontSize="14" Margin="2"/>
                                <TextBlock Text="{Binding Extension}" FontSize="14" Margin="2"/>
                            </StackPanel>

                            <StackPanel Grid.Column="2" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 40 0">
                                <TextBlock Text="{Binding LastAccessed}" FontSize="14"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</Window>
