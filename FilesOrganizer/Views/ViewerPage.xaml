<UserControl x:Class="FilesOrganizer.Views.ViewerPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FilesOrganizer.Views"
             xmlns:materialIcons="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
             xmlns:vm="clr-namespace:FilesOrganizer.ViewModels.Commands"
             xmlns:model="clr-namespace:FilesOrganizer.Models"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:convert="clr-namespace:FilesOrganizer.Core"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <Grid>
        <Grid.Resources>
            <convert:ArrayMultiValueConverter x:Key="arrayMultiValueConverter"/>
            <convert:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <convert:BindingProxy x:Key="proxy" Data="{Binding}" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Background="CornflowerBlue" Height="50" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="-3,0,3,0" Height="50">
                <Button Background="Transparent" Margin="10" Command="{Binding Path=Commands.OpenLoadSpaceCommand}" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Upload workspace" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="ProgressUpload"/>
                </Button>
                <Button Background="Transparent" Margin="10" Command="{Binding Path=Commands.SaveCommand}" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Save" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="ContentSave"/>
                </Button>
                <Button Background="Transparent" Command="{Binding Path=Commands.PushChangesCommand}" Margin="10" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Push changes to drive" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="Update"/>
                </Button>
                <Button Background="Transparent" Margin="10" Command="{Binding Path=Commands.HomeCommand}"  BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Home" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="Home"/>
                </Button>
                <Button Background="Transparent" Margin="10" Command="{Binding Path=Commands.BackCommand}" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Back" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="ChevronDoubleLeft"/>
                </Button>
                <Button Background="Transparent" Margin="10" Command="{Binding Path=Commands.ForwardCommand}" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Next" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="ChevronDoubleRight"/>
                </Button>
            </StackPanel>

            <TextBox x:Name="PathTextBox" Text="{Binding Path=CurrentPathDisplayed}" Grid.Column="1" IsEnabled="False" Margin="10" FontSize="17">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TextBox">
                                    <Grid>
                                        <TextBox Text="{Binding Path=CurrentPathDisplayed, UpdateSourceTrigger=PropertyChanged}" Background="White"/>
                                        <TextBlock Text="Workspace path" IsHitTestVisible="False" Foreground="Gray" Margin="5,3,0,0" Visibility="{Binding PathWatermark}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TextBox.Style>
            </TextBox>


            <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="0 0 0 0" Height="50">

                <Button Background="Transparent" Command="{Binding Path=Commands.LoadPathCommand}" Margin="10" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Upload space" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="Upload"/>
                </Button>
                <GridSplitter Grid.Column="3" Height="50" Width="1" Background="Black"/>
                
                <Button Margin="10" 
                        Command="{Binding ToggleGridVisibilityCommand}" 
                        CommandParameter="ConverterSpace" 
                        Background="Transparent" 
                        BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Convert file" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="FileArrowLeftRightOutline"/>
                </Button>

                <Button Command="{Binding ToggleGridVisibilityCommand}" CommandParameter="CategorySpace" Background="Transparent" Margin="10" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Add category" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="PlusBoxMultiple"/>
                </Button>

                <Button Command="{Binding ToggleGridVisibilityCommand}" CommandParameter="FilterSpace" Background="Transparent" Margin="10" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Filter category" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="Filter"/>
                </Button>

                <Button Command="{Binding ToggleGridVisibilityCommand}" CommandParameter="LanguageSpace" Background="Transparent" Margin="10" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Search by language" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="Web"/>
                </Button>

                <Button Command="{Binding Path=Commands.NewFolderCommand}" Background="Transparent" Margin="10" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="New Folder" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="FolderAdd"/>
                </Button>

                <Button Command="{Binding Path=Commands.SettingsCommand}" Background="Transparent" Margin="10" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Settings" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="Settings"/>
                </Button>

                <Button Command="{Binding Path=Commands.SimilarFilesCommand}" Background="Transparent" Margin="10" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="See similar files" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="VectorDifference"/>
                </Button>

                <Button Command="{Binding Path=Commands.TestCommand}" Background="Transparent" Margin="10" BorderBrush="Transparent">
                    <Button.ToolTip>
                        <ToolTip Content="Search by language" />
                    </Button.ToolTip>
                    <materialIcons:MaterialIcon Kind="PlaygroundSlide"/>
                </Button>

            </StackPanel>
        </Grid>

        <Grid Grid.Row="1" Background="LightGray">
            <Grid.Resources>
                <convert:ArrayMultiValueConverter x:Key="arrayMultiValueConverter"/>
                <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ListBox Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" ItemsSource="{Binding CurrentData.CurrentListBoxSource}" Margin="15" SelectedItem="{Binding SelectedItem}">
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Add to category" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" ItemsSource="{Binding CurrentData.CategoriesWithoutNone}" Padding="10">
                            <MenuItem.ItemTemplate>
                                <DataTemplate>
                                    <MenuItem HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" Header="{Binding CategoryName}">
                                        <MenuItem.Template>
                                            <ControlTemplate TargetType="MenuItem">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border BorderBrush="Black" BorderThickness="1">
                                                            <Rectangle Width="20" Height="20" Fill="{Binding Col}" />
                                                        </Border>
                                                        <GridSplitter Grid.Column="1" Width="5" IsEnabled="False" Background="Transparent"/>
                                                        <ContentPresenter Content="{TemplateBinding Header}" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="2"/>
                                                    </Grid>
                                                </Border>
                                            </ControlTemplate>
                                        </MenuItem.Template>

                                        <MenuItem.Command>
                                            <Binding Path="DataContext.Commands.AddToCategoryCommand" RelativeSource="{RelativeSource AncestorType={x:Type UserControl}}" />
                                        </MenuItem.Command>
                                        <MenuItem.CommandParameter>
                                            <MultiBinding Converter="{StaticResource arrayMultiValueConverter}">
                                                <Binding/>
                                                <Binding Path="SelectedItem" RelativeSource="{RelativeSource AncestorType={x:Type ListBox}}" />
                                            </MultiBinding>
                                        </MenuItem.CommandParameter>
                                    </MenuItem>
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                        </MenuItem>


                        <MenuItem Header="Add to Priority" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" ItemsSource="{Binding PriorityWithoutNone}" Padding="10">
                            <MenuItem.ItemTemplate>
                                <DataTemplate>
                                    <MenuItem HorizontalAlignment="Stretch" Header="{Binding}">
                                        <MenuItem.Template>
                                            <ControlTemplate TargetType="MenuItem">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                    <ContentPresenter Content="{TemplateBinding Header}" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                                </Border>
                                            </ControlTemplate>
                                        </MenuItem.Template>

                                        <MenuItem.Command>
                                            <Binding Path="DataContext.Commands.AddPriorityCommand" RelativeSource="{RelativeSource AncestorType={x:Type UserControl}}" />
                                        </MenuItem.Command>
                                        <MenuItem.CommandParameter>
                                            <MultiBinding Converter="{StaticResource arrayMultiValueConverter}">
                                                <Binding Path=""/>
                                                <Binding Path="SelectedItem" RelativeSource="{RelativeSource AncestorType={x:Type ListBox}}" />
                                            </MultiBinding>
                                        </MenuItem.CommandParameter>
                                    </MenuItem>
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                        </MenuItem>

                        <MenuItem Header="See Space Statistics" 
                              Command="{Binding Path=Commands.OpenStatisticsWindowCommand}"
                              HorizontalAlignment="Stretch" 
                              HorizontalContentAlignment="Stretch"
                              Padding="10">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSelectedFolder}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                    </ContextMenu>
                </ListBox.ContextMenu>

                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseDoubleClick">
                        <b:InvokeCommandAction Command="{Binding Path=Commands.OpenFolderCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="model:Element">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <materialIcons:MaterialIcon Height="75" Grid.Column="0" Kind="{Binding Icon}" Foreground="{Binding Color}"/>

                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>


                                    <StackPanel Grid.Column="0" Orientation="Vertical" VerticalAlignment="Center" Margin="0 8 0 0">
                                        <TextBlock Text="{Binding Name}" FontSize="14" Margin="1 0 1 0" MinWidth="200"/>
                                        <TextBlock Text="{Binding Extension}" FontSize="14" Margin="1 0 1 0"/>
                                    </StackPanel>

                                    <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" Margin="0 8 10 0">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Language: " FontSize="14" Margin="1 0 1 0"/>
                                            <TextBlock Text="{Binding Language}" FontSize="14" Margin="1 0 1 0"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Code language:" FontSize="14" Margin="1 0 1 0"/>
                                            <TextBlock Text="{Binding CodeLanguage}" FontSize="14" Margin="1 0 1 0" MinWidth="75"/>
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel Grid.Column="2" Orientation="Vertical" VerticalAlignment="Center" Margin="0 8 10 0">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Priority:" FontSize="14" Margin="1 0 1 0"/>
                                            <TextBlock Text="{Binding Priority}" FontSize="14" Margin="1 0 1 0" MinWidth="75">
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Remove from Priority" Command="{Binding Path=Data.Commands.RemovePriorityCommand, Source={StaticResource proxy}}">
                                                            <MenuItem.CommandParameter>
                                                                <MultiBinding Converter="{StaticResource arrayMultiValueConverter}">
                                                                    <Binding Path="Data.SelectedItem" Source="{StaticResource proxy}" />
                                                                </MultiBinding>
                                                            </MenuItem.CommandParameter>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0 0 10 0">
                                            <TextBlock Text="Category: " FontSize="14" Margin="1 0 1 0"/>
                                            <ItemsControl ItemsSource="{Binding Category}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Horizontal"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding CategoryName}" Foreground="{Binding TextColor}" FontSize="14" Margin="2">
                                                            <TextBlock.ContextMenu>
                                                                <ContextMenu>
                                                                    <MenuItem Header="Remove from Category" Command="{Binding Path=Data.Commands.RemoveFromCategoryCommand, Source={StaticResource proxy}}">
                                                                        <MenuItem.CommandParameter>
                                                                            <MultiBinding Converter="{StaticResource arrayMultiValueConverter}">
                                                                                <Binding/>
                                                                                <Binding Path="Data.SelectedItem" Source="{StaticResource proxy}" />
                                                                            </MultiBinding>
                                                                        </MenuItem.CommandParameter>
                                                                    </MenuItem>
                                                                </ContextMenu>
                                                            </TextBlock.ContextMenu>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>

                                <TextBlock Grid.Row="1" Text="{Binding Path}" FontSize="14"/>
                            </Grid>
                            <StackPanel Grid.Column="2" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 40 0">
                                <TextBlock Text="{Binding Appearance}" FontSize="14"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Grid Grid.Column="1" Width="200" Margin="15" Visibility="{Binding IsGridVisible.Item2, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#fff8f0" Offset="0"/>
                        <GradientStop Color="#73a3c1" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="Category Content" FontSize="18" FontWeight="Bold" Margin="25 10 0 0"/>

                <TextBox Grid.Row="1" Margin="0 10 0 15" HorizontalAlignment="Center" VerticalAlignment="Center" Width="150" Height="20">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TextBox">
                                        <Grid>
                                            <TextBox Text="{Binding CategoryName, UpdateSourceTrigger=PropertyChanged}" Background="White"/>
                                            <TextBlock Text="Category name" IsHitTestVisible="False" Foreground="Gray" Margin="5,1,0,0" Visibility="{Binding CategoryNameWattermark}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Grid Grid.Row="2">
                    <ComboBox x:Name="ColorComboBox" Width="150" Height="31" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10" ItemsSource="{Binding ColorList}" SelectedItem="{Binding DefinedCategory}" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <Border x:Name="ItemBorder" Padding="2" BorderBrush="#3498db" BorderThickness="3" CornerRadius="5" Background="#ecf0f1">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                        <Border Width="15" Height="15" BorderBrush="#2c3e50" BorderThickness="1" CornerRadius="5">
                                            <Rectangle Width="13" Height="13" Fill="{Binding Col}" VerticalAlignment="Top" RadiusX="4" RadiusY="4"/>
                                        </Border>
                                        <TextBlock Text="{Binding Name}" Margin="5,0,0,0" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                                <!--<DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBoxItem}}, Path=IsSelected}" Value="True">
                                        <Setter TargetName="ItemBorder" Property="BorderThickness" Value="0"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>-->
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ComboBoxItem">
                                            <Border x:Name="Border" Background="#ecf0f1" BorderBrush="#bdc3c7" BorderThickness="1" CornerRadius="5">
                                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="Border" Property="Background" Value="#ecf0f1"/>
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                                    <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>
                    <TextBlock Text="Select a color" IsHitTestVisible="False" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="30,0,0,0" Visibility="{Binding ElementName=ColorComboBox, Path=SelectedItem, Converter={StaticResource NullToVisibilityConverter}}"/>
                </Grid>

                <Button Grid.Row="3" Margin="0 0 0 15" HorizontalAlignment="Center" VerticalAlignment="Center" Width="150" Height="20" Command="{Binding Path=Commands.AddCategoryCommand}">
                    <materialIcons:MaterialIcon Kind="Check"/>
                </Button>
                <ListBox Background="Transparent" BorderBrush="Transparent" Grid.Row="4" ItemsSource="{Binding CurrentData.CategoriesWithoutNone}" Margin="25 10 25 10">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Ellipse Width="25" Height="25" Fill="{Binding Col}" VerticalAlignment="Top"/>
                                <TextBlock Grid.Column="1" Text="{Binding CategoryName}" FontSize="14" Margin="2"/>

                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>

            <Grid Grid.Column="2" Width="200" Margin="15" Visibility="{Binding IsGridVisible.Item3, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#fff8f0" Offset="0"/>
                        <GradientStop Color="#73a3c1" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="Category" FontSize="18" FontWeight="Bold" Margin="25 10 0 0"/>

                <Grid Grid.Row="1">
                    <ComboBox x:Name="MyComboBox" Width="150" Height="20" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10" ItemsSource="{Binding CurrentData.Categories}" SelectedItem="{Binding SelectedCategory, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Rectangle Width="15" Height="15" Fill="{Binding Col}" Margin="0,0,5,0"/>
                                    <TextBlock Text="{Binding CategoryName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="DropDownClosed">
                                <b:InvokeCommandAction Command="{Binding Path=Commands.UpdateFiltersCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                    <TextBlock Text="Select a category" IsHitTestVisible="False" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="30,0,0,0" Visibility="{Binding ElementName=MyComboBox, Path=SelectedItem, Converter={StaticResource NullToVisibilityConverter}}"/>
                </Grid>

                <TextBlock Grid.Row="2" Text="Type" FontSize="18" FontWeight="Bold" Margin="25 10 0 0"/>
                <Grid Grid.Row="3">
                    <ComboBox x:Name="PriorityComboBox" Width="150" Height="20" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10" ItemsSource="{Binding PriorityList}" SelectedItem="{Binding SelectedPriority, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="DropDownClosed">
                                <b:InvokeCommandAction Command="{Binding Path=Commands.UpdateFiltersCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                    <TextBlock Text="Select a priority" IsHitTestVisible="False" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="30,0,0,0" Visibility="{Binding ElementName=PriorityComboBox, Path=SelectedItem, Converter={StaticResource NullToVisibilityConverter}}"/>
                </Grid>

                <GridSplitter Grid.Row="4" Height="1" Width="Auto" Margin="20 10 20 0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Black"/>

                <TextBlock Grid.Row="5" Text="Search by word" FontSize="18" FontWeight="Bold" Margin="25 10 0 0"/>
                <TextBox Grid.Row="6" Width="150" Height="20" Margin="0 10 0 0">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TextBox">
                                        <Grid>
                                            <TextBox Text="{Binding SearchingWord, UpdateSourceTrigger=PropertyChanged}" Background="White"/>
                                            <TextBlock Text="Write a word/sentence" IsHitTestVisible="False" Foreground="Gray" Margin="5,1,0,0" Visibility="{Binding SearchingWordWatermark}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <Grid Grid.Row="7" Margin="25 10 0 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Row="0" Content="By Name" IsChecked="{Binding IsByNameChecked}"/>
                    <CheckBox Grid.Row="1" Content="By Content" Margin="0 10 0 0" IsChecked="{Binding IsByContentChecked}"/>
                </Grid>
                <Button Grid.Row="8" Margin="0 10 0 15" HorizontalAlignment="Center" VerticalAlignment="Center" Width="150" Height="20" Command="{Binding Path=Commands.SearchCommand}">
                    <materialIcons:MaterialIcon Kind="Check"/>
                </Button>

            </Grid>
            <Grid Grid.Column="3" Width="200" Margin="15" Visibility="{Binding IsGridVisible.Item1, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#fff8f0" Offset="0"/>
                        <GradientStop Color="#73a3c1" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Convert Items" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,10" FontSize="18" FontWeight="Bold" Grid.Row="0"/>

                <ItemsControl ItemsSource="{Binding ConversionOptions}" Margin="10" Grid.Row="1">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding Content}" IsChecked="{Binding IsChecked}" Margin="15 5 0 0"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <TextBox Grid.Row="2" Margin="0 0 0 15" HorizontalAlignment="Center" VerticalAlignment="Center" Width="150" Height="20">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TextBox">
                                        <Grid>
                                            <TextBox Text="{Binding ConversionName, UpdateSourceTrigger=PropertyChanged}" Background="White"/>
                                            <TextBlock Text="File conversion name" IsHitTestVisible="False" Foreground="Gray" Margin="5,1,0,0" Visibility="{Binding ConversionNameWattermark}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TextBox.Style>
                </TextBox>


                <Grid Grid.Row="3" Margin="0 0 0 15" HorizontalAlignment="Center" VerticalAlignment="Center" Width="150" Height="20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Row="0" Width="125" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TextBox">
                                            <Grid>
                                                <TextBox Text="{Binding SavingConversionPath, UpdateSourceTrigger=PropertyChanged}" Background="White"/>
                                                <TextBlock Text="File conversion path" IsHitTestVisible="False" Foreground="Gray" Margin="5,1,0,0" Visibility="{Binding ConversionPathWattermark}"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <Button Grid.Column="1" Command="{Binding Path=Commands.SaveConversionPathCommand}" Width="25" Height="20">
                        <materialIcons:MaterialIcon Kind="Search"/>
                    </Button>
                </Grid>

                <Button Grid.Row="4" Margin="0 0 0 15" Command="{Binding Path=Commands.SaveConversionCommand}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="150" Height="20">
                    <materialIcons:MaterialIcon Kind="Check"/>
                </Button>
            </Grid>




            <Grid Grid.Column="4" Width="200" Margin="15" Visibility="{Binding IsGridVisible.Item4, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#fff8f0" Offset="0"/>
                        <GradientStop Color="#73a3c1" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="Language" FontSize="18" FontWeight="Bold" Margin="25 10 0 0"/>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="LanguageComboBox" Width="150" Height="20" VerticalAlignment="Center" Margin="25,0,25,0" ItemsSource="{Binding Languages}" SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}" Grid.ColumnSpan="2">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="DropDownClosed">
                                <b:InvokeCommandAction Command="{Binding Path=Commands.UpdateFiltersCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                    <TextBlock Text="Select a language" IsHitTestVisible="False" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="30,0,0,0" Visibility="{Binding ElementName=LanguageComboBox, Path=SelectedItem, Converter={StaticResource NullToVisibilityConverter}}" Grid.ColumnSpan="2"/>
                </Grid>

                <TextBlock Grid.Row="2" Text="Code language" FontSize="18" FontWeight="Bold" Margin="25 10 0 0"/>
                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="CodeLanguageComboBox" Width="150" Height="20" VerticalAlignment="Center" Margin="25,0,25,0" ItemsSource="{Binding CodeLanguages}" SelectedItem="{Binding SelectedCodeLanguage, Mode=TwoWay}" Grid.ColumnSpan="2">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="DropDownClosed">
                                <b:InvokeCommandAction Command="{Binding Path=Commands.UpdateFiltersCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                    <TextBlock Text="Select a language" IsHitTestVisible="False" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="30,0,0,0" Visibility="{Binding ElementName=CodeLanguageComboBox, Path=SelectedItem, Converter={StaticResource NullToVisibilityConverter}}" Grid.ColumnSpan="2"/>
                </Grid>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
